<?php
/*
 本代码由 宗师堂 创建
 创建时间 2019-04-09 11:02:42
 技术支持 宗师堂
 严禁反编译、逆向等任何形式的侵权行为，违者将追究法律责任
*/

namespace App\Http\Controllers;use App\Models\Channel;use App\Models\District;use App\Models\Label;use App\Models\LabelHasChannel;use App\Models\Member;use App\Models\Product;use App\Models\ProductDistrict;use App\Models\ProductPlatform;use App\Models\SmsRecord;use App\Models\TokenDevice;use App\Traits\Encrypt;use App\Traits\SendMsg;use Illuminate\Http\Request;use Illuminate\Support\Facades\DB;use Illuminate\Support\Facades\Log;use Illuminate\Support\Facades\Redis;use Illuminate\Support\Facades\Session;use Illuminate\Support\Facades\Validator;class BaseController extends Controller{use SendMsg;use Encrypt;protected $page_sizes=6;protected $article_share='';protected $product_share='';protected $credit_share='';protected $img_url='';protected $img_path='';protected $upper_warn=3;public $type='';public $noContent='no content';public $badRequest='bad request';public $unauthorized='unauthorized';public $overdueUser='user login expired';public $errorUser='user request error';public $serviceError='service error';public function __construct(){$this->img_path=env('FILE_PATH');$J1f0=env('APP_URL') . '/#/findDetails/';$this->article_share=$J1f0;$J1f0=env('APP_URL') . '/#/LoanDetail/0/';$this->product_share=$J1f0;$J1f0=env('APP_URL') . '/#/CardDetail/';$this->credit_share=$J1f0;$this->img_url=env('IMG_URL');}protected function jsonResponse(){switch($this->type){case $this->noContent:$this->code=2004;break 1;case $this->badRequest:$this->code=4000;break 1;case $this->unauthorized:$this->code=4001;break 1;case $this->overdueUser:$this->code=4002;break 1;case $this->errorUser:$this->code=4003;break 1;case $this->serviceError:$this->code=5000;break 1;default:$this->code=200;break 1;}$J1fAC0=array();$J1fAC0['code']=$this->code;$J1fAC0['info']=$this->info;$J1fAC0['data']=$this->data;return $J1fAC0;}public function generateToken(Request $request){$validate=Validator::make($request->all(),['identifier'=>'required','platform'=>'required','system'=>'required','version'=>'required']);$J1f0=!$validate->fails();if($J1f0)goto J1fBodyxa;goto J1fNextxa;J1fBodyxa:$key=$request->identifier;if(Redis::exists('token:'.$key))goto J1fBodyxc;goto J1fNextxc;J1fBodyxc:$result=Redis::get('token:'.$request->identifier);if(json_decode($result,true)['token'])goto J1fBodyxe;goto J1fNextxe;J1fBodyxe:$this->set('data',['token'=>json_decode($result,true)['token'],'expire_time'=>1200]);goto J1fxd;J1fNextxe:$token=sha1(bcrypt(bcrypt($request->identifier . $request->platform . $request->system)));if($request->authentication)goto J1fBodyxg;goto J1fNextxg;J1fBodyxg:$member=Member::where('remember_token',$request->authentication)->orderBy('last_login_at','desc')->first();if($member)goto J1fBodyxi;goto J1fNextxi;J1fBodyxi:$uid=$member->id;goto J1fxh;J1fNextxi:$uid=0;J1fxh:goto J1fxf;J1fNextxg:$uid=0;J1fxf:$uid_token=$this->uidToken($key,$token,$uid);if($uid_token)goto J1fBodyxk;goto J1fNextxk;J1fBodyxk:TokenDevice::create(['identifier'=>$request->identifier,'platform'=>$request->platform,'system'=>$request->system,'version'=>$request->version,'token'=>$token]);Member::where('id',$uid)->update(['remember_token'=>$token]);$this->set('data',['token'=>$token,'expire_time'=>1200]);goto J1fxj;J1fNextxk:$this->set('type',$this->serviceError);$this->set('info','系统错误');J1fxj:J1fxd:goto J1fxb;J1fNextxc:$token=sha1(bcrypt(bcrypt($request->identifier . $request->platform . $request->system)));if($request->authentication)goto J1fBodyxm;goto J1fNextxm;J1fBodyxm:$member=Member::where('remember_token',$request->authentication)->orderBy('last_login_at','desc')->first();if($member)goto J1fBodyxo;goto J1fNextxo;J1fBodyxo:$uid=$member->id;goto J1fxn;J1fNextxo:$uid=0;J1fxn:goto J1fxl;J1fNextxm:$uid=0;J1fxl:$uid_token=$this->uidToken($key,$token,$uid);if($uid_token)goto J1fBodyxq;goto J1fNextxq;J1fBodyxq:TokenDevice::create(['identifier'=>$request->identifier,'platform'=>$request->platform,'system'=>$request->system,'version'=>$request->version,'token'=>$token]);Member::where('id',$uid)->update(['remember_token'=>$token]);$this->set('data',['token'=>$token,'expire_time'=>1200]);goto J1fxp;J1fNextxq:$this->set('type',$this->serviceError);$this->set('info','系统错误');J1fxp:J1fxb:goto J1fx9;J1fNextxa:$this->set('type',$this->badRequest);if($validate->errors()->has('identifier'))goto J1fBodyxs;goto J1fNextxs;J1fBodyxs:$this->set('info','缺少设备码');goto J1fxr;J1fNextxs:if($validate->errors()->has('platform'))goto J1fBodyxt;goto J1fNextxt;J1fBodyxt:$this->set('info','缺少平台识别码');goto J1fxr;J1fNextxt:if($validate->errors()->has('system'))goto J1fBodyxu;goto J1fNextxu;J1fBodyxu:$this->set('info','缺少系统版本号');goto J1fxr;J1fNextxu:$this->set('info','缺少app版本号');J1fxr:J1fx9:return $this->jsonResponse();}public function uidToken($key,$token,$uid){$J1fAC0=array();$J1fAC0['token']=$token;$J1fAC0['uid']=$uid;$data=$J1fAC0;$insert=Redis::setex('token:'.$key,1200,json_encode($data));if($insert)goto J1fBodyxw;goto J1fNextxw;J1fBodyxw:return '1';goto J1fxv;J1fNextxw:return '0';J1fxv:}public function getCode(Request $request){$phone=$request->phone;$J1fAC0=array();$J1fAC0['phone']=$phone;$J1fAC0['verify_type']=$request->verify_type;$J1fAC0['type']=$request->type;$formCheck=$J1fAC0;$validate=Validator::make($formCheck,['phone'=>'required|min:11|max:11|regex:/^1[3456789]\d{9}$/','verify_type'=>'required','type'=>'required',]);$J1f0=!$validate->fails();if($J1f0)goto J1fBodyxy;goto J1fNextxy;J1fBodyxy:try{$verifyType=$request->verify_type;$member=Member::where('phone',$phone)->first();$A__AA="in_array";$J1fAC0=$A__AA($verifyType,['register','verify','forgot','login']);$J1f1=(bool)$J1fAC0;if($J1f1)goto J1fBodyx13;goto J1fNextx13;J1fBodyx13:$J1f0=$verifyType!=null;$J1f1=(bool)$J1f0;goto J1fx12;J1fNextx13:J1fx12:if($J1f1)goto J1fBodyx14;goto J1fNextx14;J1fBodyx14:$ver_type=true;if($member)goto J1fBodyx16;goto J1fNextx16;J1fBodyx16:$J1f0=$member->type!=$request->type;if($J1f0)goto J1fBodyx18;goto J1fNextx18;J1fBodyx18:$ver_type=false;goto J1fx17;J1fNextx18:J1fx17:goto J1fx15;J1fNextx16:$ver_type=false;J1fx15:$J1f0=$verifyType=='verify';$J1f4=(bool)$J1f0;$J1f12=!$J1f4;if($J1f12)goto J1fBodyx1j;goto J1fNextx1j;J1fBodyx1j:$J1f1=$verifyType=='register';$J1f3=(bool)$J1f1;if($J1f3)goto J1fBodyx1h;goto J1fNextx1h;J1fBodyx1h:$J1f2=!$ver_type;$J1f3=(bool)$J1f2;goto J1fx1g;J1fNextx1h:J1fx1g:$J1f4=(bool)$J1f3;goto J1fx1i;J1fNextx1j:J1fx1i:$J1f9=(bool)$J1f4;$J1f11=!$J1f9;if($J1f11)goto J1fBodyx1f;goto J1fNextx1f;J1fBodyx1f:$J1f5=$verifyType=='forgot';$J1f6=(bool)$J1f5;if($J1f6)goto J1fBodyx1d;goto J1fNextx1d;J1fBodyx1d:$J1f6=(bool)$member;goto J1fx1c;J1fNextx1d:J1fx1c:$J1f8=(bool)$J1f6;$J1f10=!$J1f8;if($J1f10)goto J1fBodyx1b;goto J1fNextx1b;J1fBodyx1b:$J1f7=$verifyType=='login';$J1f8=(bool)$J1f7;goto J1fx1a;J1fNextx1b:J1fx1a:$J1f9=(bool)$J1f8;goto J1fx1e;J1fNextx1f:J1fx1e:if($J1f9)goto J1fBodyx1k;goto J1fNextx1k;J1fBodyx1k:$A_A__="mt_rand";$J1fAC0=$A_A__(100000,999999);$code=$J1fAC0;$this->setCodeRedis($phone,$code,$verifyType);$J1f0=$verifyType=='register';if($J1f0)goto J1fBodyx1m;goto J1fNextx1m;J1fBodyx1m:$content='注册';goto J1fx1l;J1fNextx1m:$J1f0=$verifyType=='verify';if($J1f0)goto J1fBodyx1n;goto J1fNextx1n;J1fBodyx1n:$content='手机号验证';goto J1fx1l;J1fNextx1n:$J1f0=$verifyType=='login';if($J1f0)goto J1fBodyx1o;goto J1fNextx1o;J1fBodyx1o:$content='密码登录';goto J1fx1l;J1fNextx1o:$content='找回密码';J1fx1l:SmsRecord::create(['phone'=>$phone,'captcha'=>$code,'content'=>$content,'channel_code'=>$request->channel?:'100001','platform'=>$request->platform?:'',]);if(Session::get($verifyType.':'.$phone))goto J1fBodyx1q;goto J1fNextx1q;J1fBodyx1q:$res=$this->registerLimit($request,$phone);$J1f0=$res==1;if($J1f0)goto J1fBodyx1s;goto J1fNextx1s;J1fBodyx1s:$res=$this->newSendSMS($phone,$code,$verifyType);$A_A_A="strtr";$J1fAC0=$A_A_A($res,'"{"','[');$res=$J1fAC0;$A_AA_="substr";$J1fAC0=$A_AA_($res,0,15);$res=$J1fAC0;$A_AAA="substr";$J1fAC0=$A_AAA($res,5);$res=$J1fAC0;$AA___="strstr";$J1fAC0=$AA___($res,'200');if($J1fAC0)goto J1fBodyx1u;goto J1fNextx1u;J1fBodyx1u:$this->set('type','ok');$this->set('info','发送成功');goto J1fx1t;J1fNextx1u:SmsRecord::where(['phone'=>$phone,'captcha'=>$code])->delete();$this->set('type',$this->noContent);$this->set('info','短信验证码获取失败');J1fx1t:goto J1fx1r;J1fNextx1s:$J1f0=$res==2;if($J1f0)goto J1fBodyx1v;goto J1fNextx1v;J1fBodyx1v:SmsRecord::where(['phone'=>$phone,'captcha'=>$code])->delete();$this->set('type',$this->noContent);$this->set('info','已达注册上限');goto J1fx1r;J1fNextx1v:SmsRecord::where(['phone'=>$phone,'captcha'=>$code])->delete();$this->set('type',$this->noContent);$this->set('info','您已达今日验证码接收上限');J1fx1r:goto J1fx1p;J1fNextx1q:SmsRecord::where(['phone'=>$phone,'captcha'=>$code])->delete();$this->set('type',$this->noContent);$this->set('info','获取验证码失败');J1fx1p:goto J1fx19;J1fNextx1k:$J1f0=$verifyType=='register';if($J1f0)goto J1fBodyx1x;goto J1fNextx1x;J1fBodyx1x:if($member)goto J1fBodyx2z;goto J1fNextx2z;J1fBodyx2z:$this->set('type',$this->errorUser);$this->set('info','该手机号已注册，请登录');goto J1fx1y;J1fNextx2z:J1fx1y:goto J1fx1w;J1fNextx1x:$J1f0=!$member;if($J1f0)goto J1fBodyx22;goto J1fNextx22;J1fBodyx22:$this->set('type',$this->errorUser);$this->set('info','该手机号未注册，请先注册');goto J1fx21;J1fNextx22:J1fx21:J1fx1w:J1fx19:goto J1fx11;J1fNextx14:$this->set('type',$this->badRequest);$this->set('info','未知操作');J1fx11:return $this->jsonResponse();}catch(\Exception $exception){$this->set('type',$this->badRequest);$this->set('info',$exception->getMessage());return $this->jsonResponse();}goto J1fxx;J1fNextxy:if($validate->errors()->has('phone'))goto J1fBodyx24;goto J1fNextx24;J1fBodyx24:$this->set('type',$this->badRequest);$this->set('info','请输入正确的手机号');goto J1fx23;J1fNextx24:if($validate->errors()->has('msg_sign'))goto J1fBodyx25;goto J1fNextx25;J1fBodyx25:$this->set('type',$this->badRequest);$this->set('info','未确定短信应用');goto J1fx23;J1fNextx25:$this->set('type',$this->badRequest);$this->set('info','未知操作');J1fx23:return $this->jsonResponse();J1fxx:}public function checkCode(Request $request){$validate=Validator::make($request->all(),['phone'=>'required|min:11|max:11|regex:/^1[3456789]\d{9}$/','verification'=>'required|min:6|max:6','verify_type'=>'required',]);$J1f0=!$validate->fails();if($J1f0)goto J1fBodyx27;goto J1fNextx27;J1fBodyx27:try{$phone=$request->phone;$verification=$request->verification;$verify_type=$request->verify_type;if(Redis::exists('VerifyCode:'.$phone.$verify_type))goto J1fBodyx2a;goto J1fNextx2a;J1fBodyx2a:$J1f0=$verification!=Redis::get('VerifyCode:'.$phone.$verify_type);if($J1f0)goto J1fBodyx2c;goto J1fNextx2c;J1fBodyx2c:$this->set('type',$this->badRequest);$this->set('info','验证码错误');goto J1fx2b;J1fNextx2c:$this->set('info','success');J1fx2b:goto J1fx29;J1fNextx2a:$this->set('type',$this->noContent);$this->set('info','验证码无效');J1fx29:return $this->jsonResponse();}catch(\Exception $exception){$this->set('type',$this->badRequest);$this->set('info',$exception->getMessage());return $this->jsonResponse();}goto J1fx26;J1fNextx27:if($validate->errors()->has('phone'))goto J1fBodyx2e;goto J1fNextx2e;J1fBodyx2e:$this->set('type',$this->badRequest);$this->set('info','请输入正确的手机号');goto J1fx2d;J1fNextx2e:if($validate->errors()->has('verification'))goto J1fBodyx2f;goto J1fNextx2f;J1fBodyx2f:$this->set('type',$this->badRequest);$this->set('info','验证码格式错误');goto J1fx2d;J1fNextx2f:$this->set('type',$this->badRequest);$this->set('info','请传入验证码类型');J1fx2d:return $this->jsonResponse();J1fx26:}public function getCodeAES(Request $request){$phone=self::decrypt_pass($request->phone,$this->_aes,$this->_key);$J1fAC0=array();$J1fAC0['phone']=$phone;$J1fAC0['msg_sign']=$request->msg_sign;$J1fAC0['verify_type']=$request->verify_type;$formCheck=$J1fAC0;$validate=Validator::make($formCheck,['phone'=>'required|min:11|max:11|regex:/^1[3456789]\d{9}$/','msg_sign'=>'required','verify_type'=>'required',]);$J1f0=!$validate->fails();if($J1f0)goto J1fBodyx2h;goto J1fNextx2h;J1fBodyx2h:try{$verifyType=$request->verify_type;$member=Member::where('phone',$phone)->first();$AA__A="in_array";$J1fAC0=$AA__A($verifyType,['register','verify','forgot','login']);$J1f1=(bool)$J1fAC0;if($J1f1)goto J1fBodyx2l;goto J1fNextx2l;J1fBodyx2l:$J1f0=$verifyType!=null;$J1f1=(bool)$J1f0;goto J1fx2k;J1fNextx2l:J1fx2k:if($J1f1)goto J1fBodyx2m;goto J1fNextx2m;J1fBodyx2m:$J1f0=$verifyType=='verify';$J1f4=(bool)$J1f0;$J1f12=!$J1f4;if($J1f12)goto J1fBodyx2x;goto J1fNextx2x;J1fBodyx2x:$J1f1=$verifyType=='register';$J1f3=(bool)$J1f1;if($J1f3)goto J1fBodyx2v;goto J1fNextx2v;J1fBodyx2v:$J1f2=!$member;$J1f3=(bool)$J1f2;goto J1fx2u;J1fNextx2v:J1fx2u:$J1f4=(bool)$J1f3;goto J1fx2w;J1fNextx2x:J1fx2w:$J1f9=(bool)$J1f4;$J1f11=!$J1f9;if($J1f11)goto J1fBodyx2t;goto J1fNextx2t;J1fBodyx2t:$J1f5=$verifyType=='forgot';$J1f6=(bool)$J1f5;if($J1f6)goto J1fBodyx2r;goto J1fNextx2r;J1fBodyx2r:$J1f6=(bool)$member;goto J1fx2q;J1fNextx2r:J1fx2q:$J1f8=(bool)$J1f6;$J1f10=!$J1f8;if($J1f10)goto J1fBodyx2p;goto J1fNextx2p;J1fBodyx2p:$J1f7=$verifyType=='login';$J1f8=(bool)$J1f7;goto J1fx2o;J1fNextx2p:J1fx2o:$J1f9=(bool)$J1f8;goto J1fx2s;J1fNextx2t:J1fx2s:if($J1f9)goto J1fBodyx2y;goto J1fNextx2y;J1fBodyx2y:$AA_A_="mt_rand";$J1fAC0=$AA_A_(100000,999999);$code=$J1fAC0;$this->setCodeRedis($phone,$code,$verifyType);$J1f0=$verifyType=='register';if($J1f0)goto J1fBodyx31;goto J1fNextx31;J1fBodyx31:$content='注册';goto J1fx3z;J1fNextx31:$J1f0=$verifyType=='verify';if($J1f0)goto J1fBodyx32;goto J1fNextx32;J1fBodyx32:$content='快捷登录';goto J1fx3z;J1fNextx32:$J1f0=$verifyType=='login';if($J1f0)goto J1fBodyx33;goto J1fNextx33;J1fBodyx33:$content='密码登录';goto J1fx3z;J1fNextx33:$content='找回密码';J1fx3z:SmsRecord::create(['phone'=>$phone,'captcha'=>$code,'content'=>$content,'channel_code'=>$request->channel?:'100001','platform'=>$request->platform?:'',]);if(Session::get($verifyType.':'.$phone))goto J1fBodyx35;goto J1fNextx35;J1fBodyx35:$res=$this->registerLimit($request,$phone);$J1f0=$res==1;if($J1f0)goto J1fBodyx37;goto J1fNextx37;J1fBodyx37:$res=$this->newSendSMS($phone,$code,$verifyType);$AA_AA="strtr";$J1fAC0=$AA_AA($res,'"{"','[');$res=$J1fAC0;$AAA__="substr";$J1fAC0=$AAA__($res,0,15);$res=$J1fAC0;$AAA_A="substr";$J1fAC0=$AAA_A($res,5);$res=$J1fAC0;$AAAA_="strstr";$J1fAC0=$AAAA_($res,'200');if($J1fAC0)goto J1fBodyx39;goto J1fNextx39;J1fBodyx39:$this->set('type','ok');$this->set('info','发送成功');$this->set('data',$code);goto J1fx38;J1fNextx39:SmsRecord::where(['phone'=>$phone,'captcha'=>$code])->delete();$this->set('type',$this->noContent);$this->set('info','短信验证码获取失败');J1fx38:goto J1fx36;J1fNextx37:$J1f0=$res==2;if($J1f0)goto J1fBodyx3a;goto J1fNextx3a;J1fBodyx3a:SmsRecord::where(['phone'=>$phone,'captcha'=>$code])->delete();$this->set('type',$this->noContent);$this->set('info','已达注册上限');goto J1fx36;J1fNextx3a:SmsRecord::where(['phone'=>$phone,'captcha'=>$code])->delete();$this->set('type',$this->noContent);$this->set('info','您已达今日验证码接收上限');J1fx36:goto J1fx34;J1fNextx35:SmsRecord::where(['phone'=>$phone,'captcha'=>$code])->delete();$this->set('type',$this->noContent);$this->set('info','获取验证码失败');J1fx34:goto J1fx2n;J1fNextx2y:$J1f0=$verifyType=='register';if($J1f0)goto J1fBodyx3c;goto J1fNextx3c;J1fBodyx3c:if($member)goto J1fBodyx3e;goto J1fNextx3e;J1fBodyx3e:$this->set('type',$this->errorUser);$this->set('info','该手机号已注册，请登录');goto J1fx3d;J1fNextx3e:J1fx3d:goto J1fx3b;J1fNextx3c:$J1f0=!$member;if($J1f0)goto J1fBodyx3g;goto J1fNextx3g;J1fBodyx3g:$this->set('type',$this->errorUser);$this->set('info','该手机号未注册，请先注册');goto J1fx3f;J1fNextx3g:J1fx3f:J1fx3b:J1fx2n:goto J1fx2j;J1fNextx2m:$this->set('type',$this->badRequest);$this->set('info','未知操作');J1fx2j:return $this->jsonResponse();}catch(\Exception $exception){$this->set('type',$this->badRequest);$this->set('info',$exception->getMessage());return $this->jsonResponse();}goto J1fx2g;J1fNextx2h:if($validate->errors()->has('phone'))goto J1fBodyx3i;goto J1fNextx3i;J1fBodyx3i:$this->set('type',$this->badRequest);$this->set('info','请输入正确的手机号');goto J1fx3h;J1fNextx3i:if($validate->errors()->has('msg_sign'))goto J1fBodyx3j;goto J1fNextx3j;J1fBodyx3j:$this->set('type',$this->badRequest);$this->set('info','未确定短信应用');goto J1fx3h;J1fNextx3j:$this->set('type',$this->badRequest);$this->set('info','未知操作');J1fx3h:return $this->jsonResponse();J1fx2g:}public function checkCodeAES(Request $request){$phone=self::decrypt_pass($request->phone,$this->_aes,$this->_key);$J1fAC0=array();$J1fAC0['phone']=$phone;$J1fAC0['verification']=$request->verification;$J1fAC0['verify_type']=$request->verify_type;$formCheck=$J1fAC0;$validate=Validator::make($formCheck,['phone'=>'required|min:11|max:11|regex:/^1[3456789]\d{9}$/','verification'=>'required','verify_type'=>'required',]);$J1f0=!$validate->fails();if($J1f0)goto J1fBodyx3l;goto J1fNextx3l;J1fBodyx3l:try{$verification=$request->verification;$verify_type=$request->verify_type;if(Redis::exists('VerifyCode:'.$phone.$verify_type))goto J1fBodyx3o;goto J1fNextx3o;J1fBodyx3o:$J1f0=$verification!=Redis::get('VerifyCode:'.$phone.$verify_type);if($J1f0)goto J1fBodyx3q;goto J1fNextx3q;J1fBodyx3q:$this->set('type',$this->badRequest);$this->set('info','验证码错误');goto J1fx3p;J1fNextx3q:$this->set('info','success');J1fx3p:goto J1fx3n;J1fNextx3o:$this->set('type',$this->noContent);$this->set('info','验证码无效');J1fx3n:return $this->jsonResponse();}catch(\Exception $exception){$this->set('type',$this->badRequest);$this->set('info',$exception->getMessage());return $this->jsonResponse();}goto J1fx3k;J1fNextx3l:if($validate->errors()->has('phone'))goto J1fBodyx3s;goto J1fNextx3s;J1fBodyx3s:$this->set('type',$this->badRequest);$this->set('info','请输入正确的手机号');goto J1fx3r;J1fNextx3s:if($validate->errors()->has('verification'))goto J1fBodyx3t;goto J1fNextx3t;J1fBodyx3t:$this->set('type',$this->badRequest);$this->set('info','验证码格式错误');goto J1fx3r;J1fNextx3t:$this->set('type',$this->badRequest);$this->set('info','请传入验证码类型');J1fx3r:return $this->jsonResponse();J1fx3k:}private function registerLimit($request,$phone){$history=$this->checkCodeHistory($phone);if($history)goto J1fBodyx3v;goto J1fNextx3v;J1fBodyx3v:return 1;goto J1fx3u;J1fNextx3v:return 0;J1fx3u:}protected function cityPlatform($request){$platform=$request->platform;$product_platform=ProductPlatform::where('platform',$platform)->get();$AAAAA="count";$J1fAC0=$AAAAA($product_platform);if($J1fAC0)goto J1fBodyx3x;goto J1fNextx3x;J1fBodyx3x:$product_platform_ids=ProductPlatform::where('platform',$platform)->distinct('product_id')->pluck('product_id')->all();goto J1fx3w;J1fNextx3x:$product_platform_ids=Product::where('status',1)->pluck('id')->all();J1fx3w:if($request->city)goto J1fBodyx4z;goto J1fNextx4z;J1fBodyx4z:$J1f0=!is_numeric($request->city);if($J1f0)goto J1fBodyx42;goto J1fNextx42;J1fBodyx42:$district=District::where('name','like',"%".$request->city."%")->orderBy('id','asc')->first();if($district)goto J1fBodyx44;goto J1fNextx44;J1fBodyx44:$city=$district->id;goto J1fx43;J1fNextx44:$city=0;J1fx43:goto J1fx41;J1fNextx42:$city=$request->city;J1fx41:goto J1fx3y;J1fNextx4z:$city=0;J1fx3y:if($city)goto J1fBodyx46;goto J1fNextx46;J1fBodyx46:$code=District::where('id',$city)->first()->adcode;$parent_city=District::where('adcode','like',mb_substr($code,0,4). '%')->where('parent_id',0)->first();if($parent_city)goto J1fBodyx48;goto J1fNextx48;J1fBodyx48:$district_product=ProductDistrict::where('district_id',$parent_city->id)->first();goto J1fx47;J1fNextx48:$district_product=0;J1fx47:if($district_product)goto J1fBodyx4a;goto J1fNextx4a;J1fBodyx4a:$city_ids=District::where('adcode','like',mb_substr($code,0,4). '%')->pluck('id')->all();$not_product_ids=ProductDistrict::whereIn('district_id',$city_ids)->distinct('product_id')->pluck('product_id')->all();$all_ids=Product::where('status',1)->pluck('id')->all();$product_ids=array_diff($all_ids,$not_product_ids);goto J1fx49;J1fNextx4a:$not_product_ids=ProductDistrict::where('district_id',$city)->distinct('product_id')->pluck('product_id')->all();$all_ids=Product::where('status',1)->pluck('id')->all();$product_ids=array_diff($all_ids,$not_product_ids);J1fx49:$ids=array_intersect($product_platform_ids,$product_ids);goto J1fx45;J1fNextx46:$ids=$product_platform_ids;J1fx45:return $ids;}}
?>